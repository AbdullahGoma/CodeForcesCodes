#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'
 
//ll prefix_sum[100000];
 
void init(){
    cin.tie(0);
    cin.sync_with_stdio(0);
}
ll GCD(ll a, ll b) {
    if (b == 0)
        return a;
    return GCD(b, a % b);
}
 
ll LCM(ll a, ll b) {
    return a / GCD(a, b) * b;
}
 
bool Prime(int x) {
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}
 
bool EvenOddEqual(int a[],int n) {
    int odd = 0;
    int even = 0;
    for(int i = 0;i < n;i++) {
        if(a[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }
    return odd == even;
}
 
ll FibBetterEff(int n){
    ll a[n];
    a[0] = 0;
    a[1] = 1;
    for(int i = 2;i < n;i++){
        a[i] = a[i-1] + a[i-2];
    }
    return a[n - 1];;
}
 
bool binarySearch(ll a[],int n,int key){
    int start = 0;
    int end = n - 1;
    while(start <= end){
        int finder = end + (start - end) / 2;
        if(key == a[finder]) return true;
        else if(key > a[finder]) start = finder + 1;
        else end = finder - 1;
    }
    return false;
}
 
//ll Summition[100000];
 
int main() {
    init();
    int n;
    ll p;
    cin >> n >> p;
    ll a[n];
    int counter = 0;
    for(int i = 0;i < n;i++){
        cin >> a[i];
        if(a[i] >= p) counter++;
    }
    int x = counter / 3;
    cout << x << endl;
    return 0;
}
