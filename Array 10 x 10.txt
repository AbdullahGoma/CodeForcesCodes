#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'
 
//ll prefix_sum[100000];
 
void init(){
    cin.tie(0);
    cin.sync_with_stdio(0);
}
ll GCD(ll a, ll b) {
    if (b == 0)
        return a;
    return GCD(b, a % b);
}
 
ll LCM(ll a, ll b) {
    return a / GCD(a, b) * b;
}
 
bool Prime(int x) {
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}
 
bool EvenOddEqual(int a[],int n) {
    int odd = 0;
    int even = 0;
    for(int i = 0;i < n;i++) {
        if(a[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }
    return odd == even;
}
 
ll FibBetterEff(int n){
    ll a[n];
    a[0] = 0;
    a[1] = 1;
    for(int i = 2;i < n;i++){
        a[i] = a[i-1] + a[i-2];
    }
    return a[n - 1];;
}
 
bool binarySearch(ll a[],int n,int key){
    int start = 0;
    int end = n - 1;
    while(start <= end){
        int finder = end + (start - end) / 2;
        if(key == a[finder]) return true;
        else if(key > a[finder]) start = finder + 1;
        else end = finder - 1;
    }
    return false;
}
 

 
bool isVowel(char c)
{
    c = toupper(c);
    return (c =='A' || c =='E' || c =='I' || c =='O' || c =='U');
}

bool isIn(char c, string b){
    for(int i = 0;i < b.size();i++){
        if(c == b[i]) return false;
    }
    return true;
}

//ll Summition[100000];
int main ()
{
    init();
	
    int t;
    cin >> t;
    while (t--)
    {
        char a[10][10];
        for(int i = 0;i < 10;i++){
            for(int j = 0;j < 10;j++){
                cin >> a[i][j];
            }
        } 
        int sum = 0;
        for(int i = 0;i < 10;i++){
            for(int j = 0;j < 10;j++){
                if(((i >= 0 && i <= 9) && j == 9 && a[i][j] == 'X') || 
                ((j >= 0 && j <= 9) && i == 9 && a[i][j] == 'X') || 
                ((j >= 0 && j <= 9) && i == 0 && a[i][j] == 'X') ||
                ((i >= 0 && i <= 9) && j == 0 && a[i][j] == 'X') ) sum += 1;
                else if(((i >= 1 && i <= 8) && j == 8 && a[i][j] == 'X') || 
                ((j >= 1 && j <= 8) && i == 8 && a[i][j] == 'X') || 
                ((j >= 1 && j <= 8) && i == 1 && a[i][j] == 'X') ||
                ((i >= 1 && i <= 8) && j == 1 && a[i][j] == 'X') ) sum += 2;
                else if(((i >= 2 && i <= 7) && j == 7 && a[i][j] == 'X') || 
                ((j >= 2 && j <= 7) && i == 7 && a[i][j] == 'X') || 
                ((j >= 2 && j <= 7) && i == 2 && a[i][j] == 'X') ||
                ((i >= 2 && i <= 7) && j == 2 && a[i][j] == 'X') ) sum += 3;
                else if(((i >= 3 && i <= 6) && j == 6 && a[i][j] == 'X') || 
                ((j >= 3 && j <= 6) && i == 6 && a[i][j] == 'X') || 
                ((j >= 3 && j <= 6) && i == 3 && a[i][j] == 'X') ||
                ((i >= 3 && i <= 6) && j == 3 && a[i][j] == 'X') ) sum += 4;
                else if(((i >= 4 && i <= 5) && j == 5 && a[i][j] == 'X') || 
                ((j >= 4 && j <= 5) && i == 5 && a[i][j] == 'X') || 
                ((j >= 4 && j <= 5) && i == 4 && a[i][j] == 'X') ||
                ((i >= 4 && i <= 5) && j == 4 && a[i][j] == 'X') ) sum += 5;
            }
        }
        cout << sum << endl;
    }
    

    return 0;
}
