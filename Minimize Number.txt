#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'

//ll prefix_sum[200000];

void init(){
    cin.tie(0);
    cin.sync_with_stdio(0);
}
ll GCD(ll a, ll b) {
    if (b == 0)
        return a;
    return GCD(b, a % b);
}
 
ll LCM(ll a, ll b) {
    return a / GCD(a, b) * b;
}

bool Prime(int x) {
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}

bool EvenOddEqual(int a[],int n) {
    int odd = 0;
    int even = 0;
    for(int i = 0;i < n;i++) {
        if(a[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }
    return odd == even;
}

ll FibBetterEff(int n){
    ll a[n];
    a[0] = 0;
    a[1] = 1;
    for(int i = 2;i < n;i++){
        a[i] = a[i-1] + a[i-2];
    }
    return a[n - 1];;
}

 
int main(){
    int n;
    cin >> n;
    ll a[n];
    int operatios = 0;
    int counter = 0;
    for(int i = 0;i < n;i++) cin >> a[i];

    for(int i = 0;i < 50;i++) {
        for(int j = 0;j < n;j++){
            if(a[j] % 2 == 0){
                counter++;
                a[j] /= 2;
            }
            else break;
        }
        if(counter == n) operatios++;
        counter = 0;
    }
    cout << operatios << endl;

}


//////////////////////////////////////


#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'

//ll prefix_sum[200000];

void init(){
    cin.tie(0);
    cin.sync_with_stdio(0);
}
ll GCD(ll a, ll b) {
    if (b == 0)
        return a;
    return GCD(b, a % b);
}
 
ll LCM(ll a, ll b) {
    return a / GCD(a, b) * b;
}

bool Prime(int x) {
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}

bool EvenOddEqual(int a[],int n) {
    int odd = 0;
    int even = 0;
    for(int i = 0;i < n;i++) {
        if(a[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }
    return odd == even;
}

ll FibBetterEff(int n){
    ll a[n];
    a[0] = 0;
    a[1] = 1;
    for(int i = 2;i < n;i++){
        a[i] = a[i-1] + a[i-2];
    }
    return a[n - 1];;
}

 

int main() {
    int x;
    cin >> x;
    int arr[x];
    
    for (int i = 0; i < x; i++) {
        cin >> arr[i];
    }
    
    int res = 0;
    for (int i = 0; i < x; i++) {
        int con = 0;
        if (arr[i] % 2 != 0) {
            cout << 0 << endl;
            return 0;
        }
        
        while (arr[i] % 2 == 0) {
            con++;
            arr[i] /= 2;
        }
        
        if (i == 0 || con < res) {
            res = con;
        }
    }
    
    cout << res << endl;
    
    return 0;
}







//////////////////////////////


#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'

//ll prefix_sum[200000];

void init(){
    cin.tie(0);
    cin.sync_with_stdio(0);
}
ll GCD(ll a, ll b) {
    if (b == 0)
        return a;
    return GCD(b, a % b);
}
 
ll LCM(ll a, ll b) {
    return a / GCD(a, b) * b;
}

bool Prime(int x) {
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}

bool EvenOddEqual(int a[],int n) {
    int odd = 0;
    int even = 0;
    for(int i = 0;i < n;i++) {
        if(a[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }
    return odd == even;
}

ll FibBetterEff(int n){
    ll a[n];
    a[0] = 0;
    a[1] = 1;
    for(int i = 2;i < n;i++){
        a[i] = a[i-1] + a[i-2];
    }
    return a[n - 1];;
}

 

int main() {
    int t;
    cin >> t;
    while(t--){
        int n;
        int result = 0;
        cin >> n;
        int a[n];
        for (int j = 0; j < n; j++) cin >> a[j];
        result = n;
        for (int j = 0; j < n;j++) {
            if(result == 1) break;
            int counter = 0;
            for(int k = j + 1;k < n;k++){
                if(a[k] > a[k - 1]) counter++;
                if(counter == (n - j + 1)) result++;
            }
        } 
        cout << result << endl;
    }
    
    return 0;
}

.........................


#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'

//ll prefix_sum[200000];

void init(){
    cin.tie(0);
    cin.sync_with_stdio(0);
}
ll GCD(ll a, ll b) {
    if (b == 0)
        return a;
    return GCD(b, a % b);
}
 
ll LCM(ll a, ll b) {
    return a / GCD(a, b) * b;
}

bool Prime(int x) {
    if (x < 2)
        return false;
    for (int i = 2; i * i <= x; i++) {
        if (x % i == 0) {
            return false;
        }
    }
    return true;
}

bool EvenOddEqual(int a[],int n) {
    int odd = 0;
    int even = 0;
    for(int i = 0;i < n;i++) {
        if(a[i] % 2 == 0) {
            even++;
        } else {
            odd++;
        }
    }
    return odd == even;
}

ll FibBetterEff(int n){
    ll a[n];
    a[0] = 0;
    a[1] = 1;
    for(int i = 2;i < n;i++){
        a[i] = a[i-1] + a[i-2];
    }
    return a[n - 1];;
}

 

int main() {
    int t;
    cin>>t;
    while(t>0){
    int n, s = 0,e = 0;
    cin >> n;
    int a[n];
    for(int i=0;i<n;i++)
        cin >> a[i];
    for(int i=0;i<n;i++){
        if(a[i] <= a[i+1] && i < n - 1){
            s++;
        }
        else{
            e = e + (s * (s + 1)) / 2;
            s = 0;
        }
    }
    e = e + n;
    cout << e << endl;
    t--;
    }
    return 0;
}





